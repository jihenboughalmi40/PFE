(function(){"use strict";var __webpack_modules__={5659:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){eval("\n;// CONCATENATED MODULE: external [\"wp\",\"i18n\"]\nvar external_wp_i18n_namespaceObject = window[\"wp\"][\"i18n\"];\n;// CONCATENATED MODULE: external [\"wp\",\"apiFetch\"]\nvar external_wp_apiFetch_namespaceObject = window[\"wp\"][\"apiFetch\"];\nvar external_wp_apiFetch_default = /*#__PURE__*/__webpack_require__.n(external_wp_apiFetch_namespaceObject);\n;// CONCATENATED MODULE: external [\"wp\",\"domReady\"]\nvar external_wp_domReady_namespaceObject = window[\"wp\"][\"domReady\"];\nvar external_wp_domReady_default = /*#__PURE__*/__webpack_require__.n(external_wp_domReady_namespaceObject);\n;// CONCATENATED MODULE: ./src/blocks/frontend/form/captcha.js\nconst addCaptchaOnPage = forms => {\n  var _window, _window$themeisleGute;\n\n  if (!window.hasOwnProperty('grecaptcha') && (_window = window) !== null && _window !== void 0 && (_window$themeisleGute = _window.themeisleGutenbergForm) !== null && _window$themeisleGute !== void 0 && _window$themeisleGute.reRecaptchaSitekey) {\n    const script = document.createElement('script');\n    script.id = 'recaptcha';\n    document.body.appendChild(script);\n    script.addEventListener('load', () => {\n      const tryRenderCaptcha = setInterval(() => {\n        if (window.hasOwnProperty('grecaptcha') && window.grecaptcha.hasOwnProperty('render')) {\n          forms.forEach(form => {\n            var _form$classList;\n\n            if (form !== null && form !== void 0 && (_form$classList = form.classList) !== null && _form$classList !== void 0 && _form$classList.contains('has-captcha')) {\n              renderCapthcaOn(form);\n            }\n          });\n          clearInterval(tryRenderCaptcha);\n        }\n      }, 200);\n    });\n    script.src = 'https://www.google.com/recaptcha/api.js';\n  }\n};\n/**\n * Render the captcha component on form\n *\n * @param {HTMLDivElement} form The form container\n */\n\nconst renderCapthcaOn = form => {\n  var _window$grecaptcha, _window2, _window2$themeisleGut;\n\n  if (!window.hasOwnProperty('grecaptcha')) {\n    return;\n  }\n\n  const id = form.id;\n  const captchaNode = document.createElement('div');\n  const container = form.querySelector('.otter-form__container');\n  container === null || container === void 0 ? void 0 : container.insertBefore(captchaNode, container.lastChild);\n  const captcha = (_window$grecaptcha = window.grecaptcha) === null || _window$grecaptcha === void 0 ? void 0 : _window$grecaptcha.render(captchaNode, {\n    sitekey: (_window2 = window) === null || _window2 === void 0 ? void 0 : (_window2$themeisleGut = _window2.themeisleGutenbergForm) === null || _window2$themeisleGut === void 0 ? void 0 : _window2$themeisleGut.reRecaptchaSitekey,\n    callback: token => {\n      var _window$themeisleGute2;\n\n      if (!((_window$themeisleGute2 = window.themeisleGutenberg) !== null && _window$themeisleGute2 !== void 0 && _window$themeisleGute2.tokens)) {\n        window.themeisleGutenberg = {};\n        window.themeisleGutenberg.tokens = {};\n      }\n\n      window.themeisleGutenberg.tokens[id] = {\n        token,\n        reset: () => {\n          var _window$grecaptcha2;\n\n          return (_window$grecaptcha2 = window.grecaptcha) === null || _window$grecaptcha2 === void 0 ? void 0 : _window$grecaptcha2.reset(captcha);\n        }\n      };\n    },\n    'expired-callback': () => {\n      var _window$themeisleGute3;\n\n      if (!((_window$themeisleGute3 = window.themeisleGutenberg) !== null && _window$themeisleGute3 !== void 0 && _window$themeisleGute3.tokens)) {\n        window.themeisleGutenberg = {};\n        window.themeisleGutenberg.tokens = {};\n      }\n\n      window.themeisleGutenberg.tokens[id] = {\n        token: null,\n        reset: () => null\n      };\n    }\n  });\n  return captcha;\n};\n;// CONCATENATED MODULE: ./src/blocks/frontend/form/index.js\n/**\n * WordPress dependencies.\n */\n\n\n\n/**\n * Internal dependencies.\n */\n\n\nconst TIME_UNTIL_REMOVE = 10_000;\n/**\n * Send the date from the form to the server\n *\n * @param {HTMLDivElement}    form The element that contains all the inputs\n * @param {HTMLButtonElement} btn  The submit button\n */\n\nconst collectAndSendInputFormData = (form, btn) => {\n  var _ref, _form$querySelector, _form$classList, _window$themeisleGute;\n\n  const id = form === null || form === void 0 ? void 0 : form.id;\n  const data = {};\n  /** @type {Array.<HTMLDivElement>} */\n\n  const elemsWithError = [];\n  const formFieldsData = [{\n    label: (0,external_wp_i18n_namespaceObject.__)('Form submission from', 'otter-blocks'),\n    value: window.location.href\n  }];\n  const inputs = form === null || form === void 0 ? void 0 : form.querySelectorAll('.otter-form__container .wp-block-themeisle-blocks-form-input');\n  const textarea = form === null || form === void 0 ? void 0 : form.querySelectorAll('.otter-form__container .wp-block-themeisle-blocks-form-textarea');\n  (_ref = [...inputs, ...textarea]) === null || _ref === void 0 ? void 0 : _ref.forEach(input => {\n    var _input$querySelector, _input$querySelector2;\n\n    const label = (_input$querySelector = input.querySelector('.otter-form-input-label__label, .otter-form-textarea-label__label')) === null || _input$querySelector === void 0 ? void 0 : _input$querySelector.innerHTML;\n    const valueElem = input.querySelector('.otter-form-input, .otter-form-textarea-input'); // TODO: use checkbox in the future versions\n\n    const checked = (_input$querySelector2 = input.querySelector('.otter-form-input[type=\"checkbox\"]')) === null || _input$querySelector2 === void 0 ? void 0 : _input$querySelector2.checked;\n\n    if (valueElem !== null && valueElem !== void 0 && valueElem.hasAttribute('required') && !(valueElem !== null && valueElem !== void 0 && valueElem.checkValidity())) {\n      elemsWithError.push(valueElem);\n    }\n\n    if (label && valueElem !== null && valueElem !== void 0 && valueElem.value) {\n      formFieldsData.push({\n        label,\n        value: valueElem === null || valueElem === void 0 ? void 0 : valueElem.value,\n        type: valueElem === null || valueElem === void 0 ? void 0 : valueElem.type,\n        checked\n      });\n    }\n  });\n  const query = `.protection #${form.id || ''}_nonce_field`;\n  const nonceFieldValue = (_form$querySelector = form.querySelector(query)) === null || _form$querySelector === void 0 ? void 0 : _form$querySelector.value;\n  const msgAnchor = form.querySelector('.wp-block-button');\n  msgAnchor === null || msgAnchor === void 0 ? void 0 : msgAnchor.classList.add('has-submit-msg');\n  /**\n   * Add the message to the anchor element then removed after a fixed time\n   *\n   * @param {HTMLDivElement} msg The message container\n   */\n\n  const addThenRemoveMsg = msg => {\n    // Remove old messages\n    msgAnchor.querySelectorAll('.otter-form-server-response').forEach(_msg => msgAnchor.removeChild(_msg)); // Add the new message to the page\n\n    msgAnchor.appendChild(msg); // Delete it after a fixed time\n\n    setTimeout(() => {\n      if (msg && msgAnchor === msg.parentNode) {\n        msgAnchor.removeChild(msg);\n      }\n    }, TIME_UNTIL_REMOVE);\n  };\n\n  if (0 < elemsWithError.length || form !== null && form !== void 0 && (_form$classList = form.classList) !== null && _form$classList !== void 0 && _form$classList.contains('has-captcha') && id && !((_window$themeisleGute = window.themeisleGutenberg) !== null && _window$themeisleGute !== void 0 && _window$themeisleGute.tokens[id].token)) {\n    var _form$classList2, _window$themeisleGute2;\n\n    elemsWithError.forEach(input => {\n      input === null || input === void 0 ? void 0 : input.reportValidity();\n    });\n\n    if (form !== null && form !== void 0 && (_form$classList2 = form.classList) !== null && _form$classList2 !== void 0 && _form$classList2.contains('has-captcha') && id && !((_window$themeisleGute2 = window.themeisleGutenberg) !== null && _window$themeisleGute2 !== void 0 && _window$themeisleGute2.tokens[id].token)) {\n      const msg = document.createElement('div');\n      msg.classList.add('otter-form-server-response');\n\n      if (!window.hasOwnProperty('grecaptcha')) {\n        msg.innerHTML = (0,external_wp_i18n_namespaceObject.__)('⚠ Captcha is not loaded. Please check your browser plugins to allow the Google reCaptcha.', 'otter-blocks');\n      } else {\n        msg.innerHTML = (0,external_wp_i18n_namespaceObject.__)('⚠ Please check the captcha.', 'otter-blocks');\n      }\n\n      msg.classList.add('warning');\n      addThenRemoveMsg(msg);\n    }\n\n    btn.disabled = false;\n  } else {\n    var _form$dataset, _form$dataset3, _form$classList3, _window$themeisleGute3, _window$themeisleGute4, _apiFetch$then;\n\n    data.data = formFieldsData;\n\n    if ('' !== (form === null || form === void 0 ? void 0 : (_form$dataset = form.dataset) === null || _form$dataset === void 0 ? void 0 : _form$dataset.emailSubject)) {\n      var _form$dataset2;\n\n      data.emailSubject = form === null || form === void 0 ? void 0 : (_form$dataset2 = form.dataset) === null || _form$dataset2 === void 0 ? void 0 : _form$dataset2.emailSubject;\n    }\n\n    if (form !== null && form !== void 0 && (_form$dataset3 = form.dataset) !== null && _form$dataset3 !== void 0 && _form$dataset3.optionName) {\n      var _form$dataset4;\n\n      data.formOption = form === null || form === void 0 ? void 0 : (_form$dataset4 = form.dataset) === null || _form$dataset4 === void 0 ? void 0 : _form$dataset4.optionName;\n    }\n\n    if (form !== null && form !== void 0 && (_form$classList3 = form.classList) !== null && _form$classList3 !== void 0 && _form$classList3.contains('has-captcha') && id && (_window$themeisleGute3 = window.themeisleGutenberg) !== null && _window$themeisleGute3 !== void 0 && (_window$themeisleGute4 = _window$themeisleGute3.tokens) !== null && _window$themeisleGute4 !== void 0 && _window$themeisleGute4[id].token) {\n      var _window$themeisleGute5, _window$themeisleGute6;\n\n      data.token = (_window$themeisleGute5 = window.themeisleGutenberg) === null || _window$themeisleGute5 === void 0 ? void 0 : (_window$themeisleGute6 = _window$themeisleGute5.tokens) === null || _window$themeisleGute6 === void 0 ? void 0 : _window$themeisleGute6[id].token;\n    }\n\n    if (form !== null && form !== void 0 && form.id) {\n      data.formId = form === null || form === void 0 ? void 0 : form.id;\n    }\n\n    if (nonceFieldValue) {\n      data.nonceValue = nonceFieldValue;\n    }\n\n    data.postUrl = window.location.href;\n    msgAnchor === null || msgAnchor === void 0 ? void 0 : msgAnchor.classList.add('loading');\n\n    if (form !== null && form !== void 0 && form.id) {\n      data.formId = form === null || form === void 0 ? void 0 : form.id;\n    }\n\n    if (form.classList.contains('is-subscription')) {\n      data.action = 'subscribe';\n    }\n\n    if (form.classList.contains('can-submit-and-subscribe')) {\n      var _form$querySelector2;\n\n      data.action = 'submit-subscribe';\n      data.consent = ((_form$querySelector2 = form.querySelector('.otter-form-consent input')) === null || _form$querySelector2 === void 0 ? void 0 : _form$querySelector2.checked) || false;\n    }\n\n    data.postUrl = window.location.href;\n    msgAnchor === null || msgAnchor === void 0 ? void 0 : msgAnchor.classList.add('loading');\n    (_apiFetch$then = external_wp_apiFetch_default()({\n      path: 'themeisle-gutenberg-blocks/v1/forms',\n      method: 'POST',\n      data\n    }).then(res => {\n      var _window$themeisleGute7, _window$themeisleGute8;\n\n      msgAnchor === null || msgAnchor === void 0 ? void 0 : msgAnchor.classList.remove('loading');\n      const msg = document.createElement('div');\n      msg.classList.add('otter-form-server-response');\n\n      if (res !== null && res !== void 0 && res.success) {\n        msg.innerHTML = (0,external_wp_i18n_namespaceObject.__)('Success', 'otter-blocks');\n        msg.classList.add('success');\n      } else {\n        msg.classList.add('error');\n\n        if ('provider' === (res === null || res === void 0 ? void 0 : res.error_source)) {\n          if (res !== null && res !== void 0 && res.error.includes('invalid') || res !== null && res !== void 0 && res.error.includes('fake')) {\n            // mailchimp\n            msg.classList.add('warning');\n            msg.innerHTML = (0,external_wp_i18n_namespaceObject.__)('⚠ The email address does not look correct!', 'otter-blocks');\n          } else if (res !== null && res !== void 0 && res.error.includes('duplicate') || res !== null && res !== void 0 && res.error.includes('already')) {\n            // sendinblue\n            msg.classList.add('info');\n            msg.innerHTML = (0,external_wp_i18n_namespaceObject.__)('🛈 The email was already registered!', 'otter-blocks');\n          } else {\n            msg.innerHTML = (0,external_wp_i18n_namespaceObject.__)('Error. Something is wrong with the server! Try again later.', 'otter-blocks');\n          }\n        } else {\n          msg.innerHTML = (0,external_wp_i18n_namespaceObject.__)('Error. Something is wrong with the server! Try again later.', 'otter-blocks');\n        } // eslint-disable-next-line no-console\n\n\n        // eslint-disable-next-line no-console\n        console.error(res === null || res === void 0 ? void 0 : res.error, res === null || res === void 0 ? void 0 : res.reasons);\n      }\n\n      addThenRemoveMsg(msg);\n\n      if ((_window$themeisleGute7 = window.themeisleGutenberg) !== null && _window$themeisleGute7 !== void 0 && (_window$themeisleGute8 = _window$themeisleGute7.tokens) !== null && _window$themeisleGute8 !== void 0 && _window$themeisleGute8[id].reset) {\n        var _window$themeisleGute9, _window$themeisleGute10;\n\n        (_window$themeisleGute9 = window.themeisleGutenberg) === null || _window$themeisleGute9 === void 0 ? void 0 : (_window$themeisleGute10 = _window$themeisleGute9.tokens) === null || _window$themeisleGute10 === void 0 ? void 0 : _window$themeisleGute10[id].reset();\n      }\n\n      btn.disabled = false;\n    })) === null || _apiFetch$then === void 0 ? void 0 : _apiFetch$then.catch(error => {\n      var _window$themeisleGute11, _window$themeisleGute12;\n\n      msgAnchor === null || msgAnchor === void 0 ? void 0 : msgAnchor.classList.remove('loading'); // eslint-disable-next-line no-console\n\n      console.error(error);\n      const msg = document.createElement('div');\n      msg.classList.add('otter-form-server-response');\n      msg.innerHTML = (0,external_wp_i18n_namespaceObject.__)('Error. Something is wrong with the server! Try again later.', 'otter-blocks');\n      msg.classList.add('error');\n      addThenRemoveMsg(msg);\n\n      if ((_window$themeisleGute11 = window.themeisleGutenberg) !== null && _window$themeisleGute11 !== void 0 && (_window$themeisleGute12 = _window$themeisleGute11.tokens) !== null && _window$themeisleGute12 !== void 0 && _window$themeisleGute12[id].reset) {\n        var _window$themeisleGute13, _window$themeisleGute14;\n\n        (_window$themeisleGute13 = window.themeisleGutenberg) === null || _window$themeisleGute13 === void 0 ? void 0 : (_window$themeisleGute14 = _window$themeisleGute13.tokens) === null || _window$themeisleGute14 === void 0 ? void 0 : _window$themeisleGute14[id].reset();\n      }\n\n      btn.disabled = false;\n    });\n  }\n};\n\nexternal_wp_domReady_default()(() => {\n  const forms = document.querySelectorAll('.wp-block-themeisle-blocks-form');\n  addCaptchaOnPage(forms);\n  forms.forEach(form => {\n    if (form.classList.contains('can-submit-and-subscribe')) {\n      renderConsentCheckbox(form);\n    }\n\n    const sendBtn = form.querySelector('button');\n    sendBtn === null || sendBtn === void 0 ? void 0 : sendBtn.addEventListener('click', event => {\n      if (!sendBtn.disabled) {\n        event.preventDefault();\n        sendBtn.disabled = true;\n        collectAndSendInputFormData(form, sendBtn);\n      }\n    });\n  });\n});\n/**\n * Render a checkbox for consent\n *\n * @param {HTMLDivElement} form\n */\n\nconst renderConsentCheckbox = form => {\n  const container = form.querySelector('.otter-form__container');\n  const button = form.querySelector('.wp-block-button');\n  const inputContainer = document.createElement('div');\n  inputContainer.classList.add('otter-form-consent');\n  container.insertBefore(inputContainer, button);\n  const input = document.createElement('input');\n  input.type = 'checkbox';\n  input.name = 'consent';\n  input.id = 'consent';\n  const label = document.createElement('label');\n  label.innerHTML = (0,external_wp_i18n_namespaceObject.__)('I consent to my name and email to be collected.', 'otter-blocks');\n  label.htmlFor = 'consent';\n  inputContainer.appendChild(input);\n  inputContainer.appendChild(label);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5659\n")}},__webpack_require__={n:function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return __webpack_require__.d(F,{a:F}),F},d:function(Q,F){for(var B in F)__webpack_require__.o(F,B)&&!__webpack_require__.o(Q,B)&&Object.defineProperty(Q,B,{enumerable:!0,get:F[B]})},o:function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)}},__webpack_exports__={};__webpack_modules__[5659](0,__webpack_exports__,__webpack_require__)})();