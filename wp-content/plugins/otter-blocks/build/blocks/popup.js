(function(){"use strict";var __webpack_modules__={7121:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){eval("\n;// CONCATENATED MODULE: external [\"wp\",\"domReady\"]\nvar external_wp_domReady_namespaceObject = window[\"wp\"][\"domReady\"];\nvar external_wp_domReady_default = /*#__PURE__*/__webpack_require__.n(external_wp_domReady_namespaceObject);\n;// CONCATENATED MODULE: ./src/blocks/frontend/popup/popup.js\nclass PopupBlock {\n  constructor(element) {\n    this.element = element;\n    this.happened = false;\n    this.storageKey = 'otter-popup-dismiss';\n    const {\n      dismiss,\n      anchor\n    } = element.dataset;\n\n    if (this.isItemDismissed() && dismiss && !anchor && !Boolean(window.themeisleGutenberg.isPreview)) {\n      return false;\n    }\n\n    this.init();\n  }\n\n  init() {\n    this.bindOpen();\n    this.bindClose();\n  }\n\n  openModal() {\n    this.element.classList.add('active');\n    this.happened = true;\n  }\n\n  closeModal() {\n    this.element.classList.remove('active');\n    this.dismissModal();\n  }\n\n  dismissModal() {\n    const {\n      dismiss,\n      anchor\n    } = this.element.dataset;\n    const {\n      id\n    } = this.element;\n\n    if (!dismiss || !id || anchor) {\n      return false;\n    }\n\n    const now = new Date();\n    const cache = JSON.parse(localStorage.getItem(this.storageKey)) || [];\n    const exists = cache.some(entry => entry.modalID === id);\n\n    if (exists) {\n      return false;\n    }\n\n    const ttl = 1000 * 60 * 60 * 24 * dismiss;\n    const item = {\n      expiry: now.getTime() + ttl,\n      modalID: id\n    };\n    localStorage.setItem(this.storageKey, JSON.stringify([...cache, item]));\n  }\n\n  isItemDismissed() {\n    const {\n      id\n    } = this.element;\n    const cache = JSON.parse(localStorage.getItem(this.storageKey)) || [];\n    const inCache = cache.filter(entry => entry.modalID === id);\n\n    if (0 === inCache.length) {\n      return false;\n    }\n\n    const item = inCache[0];\n    const now = new Date();\n\n    if (item.expiry > now.getTime()) {\n      return true;\n    }\n\n    const newCache = cache.filter(i => {\n      return i !== inCache[0];\n    });\n    localStorage.setItem(this.storageKey, JSON.stringify(newCache));\n    return false;\n  }\n\n  bindOpen() {\n    const {\n      open\n    } = this.element.dataset;\n\n    switch (open) {\n      case 'onClick':\n        this.bindAnchors();\n        break;\n\n      case 'onScroll':\n        this.bindOpenAfterScroll();\n        break;\n\n      case 'onExit':\n        this.bindExitIntent();\n        break;\n\n      default:\n      case 'onLoad':\n        this.bindOnLoad();\n        break;\n    }\n  }\n\n  bindAnchors() {\n    const {\n      anchor\n    } = this.element.dataset;\n\n    if (!anchor) {\n      return false;\n    }\n\n    const buttons = document.querySelectorAll(`a[href='#${anchor}']`);\n    buttons.forEach(button => {\n      button.addEventListener('click', e => {\n        e.preventDefault();\n        this.openModal();\n      });\n    });\n  }\n\n  bindOpenAfterScroll() {\n    window.document.addEventListener('scroll', () => {\n      if (this.happened) {\n        return false;\n      }\n\n      const {\n        offset\n      } = this.element.dataset;\n\n      if (parseInt(offset) >= parseInt(this.getScrolledPercent())) {\n        return false;\n      }\n\n      this.openModal();\n    });\n  }\n\n  bindOnLoad() {\n    const {\n      time\n    } = this.element.dataset;\n    setTimeout(() => {\n      this.openModal();\n    }, time * 1000);\n  }\n\n  bindExitIntent() {\n    document.body.addEventListener('mouseleave', e => {\n      if (this.happened) {\n        return false;\n      }\n\n      if (0 > e.clientY) {\n        this.openModal();\n      }\n    });\n  }\n\n  getScrolledPercent() {\n    const height = document.documentElement;\n    const body = document.body;\n    const st = 'scrollTop';\n    const sh = 'scrollHeight';\n    return (height[st] || body[st]) / ((height[sh] || body[sh]) - height.clientHeight) * 100;\n  }\n\n  bindClose() {\n    this.bindCloseButtons();\n    this.bindAnchorClose();\n    this.bindOverlayClosing();\n  }\n\n  bindAnchorClose() {\n    const {\n      anchorclose\n    } = this.element.dataset;\n\n    if (!anchorclose) {\n      return false;\n    }\n\n    const buttons = document.querySelectorAll(`a[href='#${anchorclose}']`);\n    buttons.forEach(button => {\n      button.addEventListener('click', e => {\n        e.preventDefault();\n        this.closeModal();\n      });\n    });\n  }\n\n  bindCloseButtons() {\n    const modal = this.element;\n    const closes = modal.querySelectorAll('.otter-popup__modal_header .components-button');\n    closes.forEach(close => {\n      close.addEventListener('click', () => {\n        this.closeModal();\n      });\n    });\n  }\n\n  bindOverlayClosing() {\n    const {\n      outside\n    } = this.element.dataset;\n\n    if (!outside) {\n      return false;\n    }\n\n    const overlay = this.element.querySelector('.otter-popup__modal_wrap_overlay');\n    overlay.addEventListener('click', () => {\n      this.closeModal();\n    });\n  }\n\n}\n\n/* harmony default export */ var popup = (PopupBlock);\n;// CONCATENATED MODULE: ./src/blocks/frontend/popup/index.js\n/**\n * WordPress dependencies\n */\n\n/**\n * Internal dependencies\n */\n\n\nexternal_wp_domReady_default()(() => {\n  const popups = document.querySelectorAll('.wp-block-themeisle-blocks-popup');\n\n  if (!popups.length) {\n    return;\n  }\n\n  popups.forEach(block => new popup(block));\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7121\n")}},__webpack_require__={n:function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return __webpack_require__.d(F,{a:F}),F},d:function(Q,F){for(var B in F)__webpack_require__.o(F,B)&&!__webpack_require__.o(Q,B)&&Object.defineProperty(Q,B,{enumerable:!0,get:F[B]})},o:function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)}},__webpack_exports__={};__webpack_modules__[7121](0,__webpack_exports__,__webpack_require__)})();